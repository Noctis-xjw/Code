#define _CRT_SECURE_NO_WARNINGS 1

#include<windows.h>
#include<stdio.h>
#include <time.h>

char arr [3][3] ={0};
int capacity = 9;

enum OP 
{
       exit1,
       play
};

void menu ()
{
       printf("_____________________________________________________________\n" );
       printf("|***************************0. 退出**************************|\n");
       printf("|***************************1. 开玩**************************|\n");
       printf("_____________________________________________________________\n" );
}

void print_board ()
{
       int i = 0, j = 0;
       printf("   |   |   \n" );
       for (i = 0; i < 3; i++)
      {
             printf("_%c_|_%c_|_%c_\n" , arr[ i][0], arr [i][1], arr[i ][2]);  
             if (i < 2)
                   printf("   |   |   \n" );
      }     
}

void peopleplaying_chess ()
{
       int x = 0;
       int y = 0;
       printf(" 请输入坐标： ");
       scanf("%d %d" ,&x,& y);
       if (x <1 || x>3 || y<1 || y >3 || arr[ x-1][y -1]!=' ')
      {
             printf(" 位置错误");
             peopleplaying_chess();
      }
       else
      {
             arr[x -1][y-1]= 'x';
             capacity--;
      }
}

void complaying_chess ()
{

       int x = 0;
       int y = 0;
       srand((unsigned )time( NULL)); 
       x = rand () % 3;           
       y = rand () % 3;
       while(arr [x][ y]!=' ' )
      {
             x = rand () % 3;           
             y = rand () % 3;
      }
       arr[x ][y] = '0';
       capacity--;
}

int winning ()
{
       int i = 0;
       for(i = 0; i<3; i++)
      {

             if (arr [0][i]== 'x'&&arr [1][i]== 'x'&&arr [2][i]== 'x'||
                   arr[i ][0]=='x'&& arr[i ][1]=='x'&& arr[i ][2]=='x'||
                  ( arr[0][0]=='x' &&arr[1][1]== 'x'&&arr [2][2]=='x')||
                  ( arr[2][0]=='x' &&arr[1][1]== 'x'&&arr [0][2]=='x'))
            {
                   //printf("人赢");
                   return 1;

            }
             if (arr [0][i]== '0'&&arr [1][i]== '0'&&arr [2][i]== '0'||
                   arr[i ][0]=='0'&& arr[i ][1]=='0'&& arr[i ][2]=='0'||
                  ( arr[0][0]=='0' &&arr[1][1]== '0'&&arr [2][2]=='0')||
                  ( arr[2][0]=='0' &&arr[1][1]== '0'&&arr [0][2]=='0'))
            {
                   //printf("机器赢");
                   return 2;
            }
             if (capacity ==0)
            {
                   //printf("平局");
                   return 3;
            }

      }
       return 0;
}

int main ()
{

       int chose = 0;
       int i = 0,j = 0;
       for (i = 0; i < 3; i++)
      {
             for (j = 0; j < 3; j++)
            {
                   arr[i ][j] = ' ';
            }
      }
       menu();
       printf(" 请选择：>");
       scanf("%d" ,&chose);
       switch(chose )
      {
       case exit1 :
             return 0;
       case play :
             while(1)
            {
                   print_board();
                   if (winning ()==1||winning()==2|| winning()==3)
                  {
                         break;
                  }
                   peopleplaying_chess();
                   if (winning ()==1||winning()==2|| winning()==3)
                  {
                         break;
                  }
                   complaying_chess();
            }
             if (winning () == 1)
            {
                   printf("\n 人赢结果如下 \n");
                   print_board();
                   break;
            }
             if (winning () == 2)
            {
                   printf("\n 机器赢结果如下 \n");
                   print_board();
                   break;
            }
             if (winning () == 3)
            {
                   printf("\n 平局结果如下 \n");
                   print_board();
                   break;
            }

       default:
             break;
      }
       system("pause" );
       return 0;
}
